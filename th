#include "address_map_arm.h"
#include "GSInterface.h"

volatile unsigned int * GS_DEVID_ptr = (volatile unsigned int*) (GS_DEVID);
volatile unsigned int * GS_DATA_FORMAT_ptr  = (volatile unsigned int*) (GS_DATA_FORMAT);
volatile unsigned int * GS_BW_RATE_ptr  = (volatile unsigned int*) (GS_BW_RATE);
volatile unsigned int * GS_POWER_CTL_ptr  = (volatile unsigned int*) (GS_POWER_CTL);
volatile unsigned int * GS_DATAX0_ptr  = (volatile unsigned int*) (GS_DATAX0);
volatile unsigned int * DATA_READY_BIT_ptr  = (volatile unsigned int*) (DATA_READY_BIT);
volatile int * hex_ptr = (volatile unsigned int*)HEX3_HEX0_BASE;
volatile int delay = 0;


void GSInit(void)
{
	// Configure for full resolution, +/- 2G operation
	*(GS_DATA_FORMAT_ptr) |= 0b1000;
	// Configure for 200Hz sampling rate.  Sampling rate of 10 == 100Hz.  Each incremement after that is a doubling.
	*(GS_BW_RATE_ptr) = 0xc8; // fix later will work for now
	// Configure to begin measurement
	*(GS_POWER_CTL_ptr) |= 0b1000;
	
}

int main(void) {
	I2C0Init();
	
	// Read the GS DEVID here to make sure you are talking to it
	ReadGSRegister(0xE5)
	// Initialize the GS unit for sampling
	GSInit();
	unsigned char array[2] =  {0,0,0,0,0,0};
	int a = 22;
	while (1)
	{		

// see if its done THEN read the data.
	if (*(DATA_READY_BIT) |= 0b10000000 == 1) 
	{printf(("hello world: %d", a);}
		
		MultiReadGS(GS_DATAX0,array, 6);
		// OK, start sampling and displaying
		printf("hello world: %d", a);
		for(delay=700000; delay != 0; delay--);
		
	}
}
